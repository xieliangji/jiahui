<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jc.sugar.JiaHui.dao.SugarProjectDao">
    <resultMap id="Project" type="jc.sugar.JiaHui.entity.SugarProject">
        <result column="id" property="id" javaType="java.lang.Integer"/>
        <result column="name" property="name" javaType="java.lang.String"/>
        <result column="remark" property="remark" javaType="java.lang.String"/>
        <result column="creator_id" property="creatorId" javaType="java.lang.Integer"/>
        <result column="create_time" property="createTime" javaType="java.util.Date"/>
        <result column="updater_id" property="updaterId" javaType="java.lang.Integer"/>
        <result column="update_time" property="updateTime" javaType="java.util.Date"/>
        <association property="creator" column="creator_id">
            <result column="creator_id" property="id"/>
            <result column="creator_name" property="username"/>
        </association>
        <association property="updater" column="updater_id">
            <result column="updater_id" property="id"/>
            <result column="updater_name" property="username"/>
        </association>
        <collection property="members" ofType="jc.sugar.JiaHui.entity.SugarAccount">
            <id property="id" column="account_id"/>
            <result property="username" column="account_name"/>
            <result property="email" column="account_email"/>
        </collection>

    </resultMap>


    <sql id="allColumns">id, name, remark, creator_id, create_time, update_time</sql>


    <insert id="saveProject" parameterType="jc.sugar.JiaHui.entity.SugarProject" keyProperty="id" keyColumn="id"  useGeneratedKeys="true">
        INSERT INTO sugar_project (name, remark, creator_id)
        VALUES (#{name}, #{remark}, #{creatorId})
    </insert>


    <update id="updateProject" parameterType="jc.sugar.JiaHui.entity.SugarProject">
        UPDATE sugar_project
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        WHERE id = #{id}
    </update>


    <delete id="deleteProjectById" parameterType="java.lang.Integer">
        DELETE FROM sugar_project WHERE id = #{id}
    </delete>


    <select id="queryProject" parameterType="jc.sugar.JiaHui.entity.query.ProjectQuery" resultMap="Project">
        SELECT sp.*, sa.username account_name, sa.id account_id, sa.email account_email FROM (
            SELECT
                p.id id,
                p.name name,
                p.remark remark,
                p.creator_id creator_id,
                p.updater_id updater_id,
                p.create_time create_time,
                p.update_time update_time,
                ca.username creator_name,
                ua.username updater_name
            FROM sugar_project p
            JOIN sugar_account_project ap ON p.id = ap.project_id AND ap.account_id = #{accountId}
            JOIN sugar_account ca ON p.creator_id = ca.id
            LEFT JOIN sugar_account ua ON p.updater_id = ua.id
            <where>
                <if test="name != null and name != ''">
                    AND p.name LIKE CONCAT('%', #{name}, '%')
                </if>
                <if test="creatorName != null and creatorName != ''">
                    AND ca.username = #{creatorName}
                </if>
            </where>
        ) sp
        JOIN sugar_account_project sap ON sp.id = sap.project_id
        JOIN sugar_account sa ON sap.account_id = sa.id
    </select>


    <select id="fetchProjectById" parameterType="java.lang.Integer" resultMap="Project">
        SELECT
            p.id id,
            p.name name,
            p.remark remark,
            p.creator_id creator_id,
            p.create_time create_time,
            p.update_time update_time,
            a.id account_id,
            a.username account_name,
            a.email account_email
        FROM
            sugar_project p, sugar_account_project ap, sugar_account a
        WHERE p.id = #{id} AND p.id = ap.project_id AND a.id = ap.account_id
    </select>
</mapper>